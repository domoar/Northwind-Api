services:
  db:
    image: postgres:17.0-bookworm
    ports:
      - published: 5432
        target: 5432
    command: >
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/certificate.crt
      -c ssl_key_file=/var/lib/postgresql/key.pem
    volumes:
      - type: bind
        source: C:/DockerVolumes/postgres/data
        target: /var/lib/postgresql/data
      - type: bind
        source: C:/DockerVolumes/postgres/postgresql.conf
        target: /etc/postgresql/postgresql.conf
        read_only: true
      - type: bind
        source: C:/DockerVolumes/postgres/tablespace/
        target: /var/lib/postgresql/tablespace
      - type: bind
        source: C:/DockerVolumes/postgres/tablespace/northwind
        target: /var/lib/postgresql/tablespace/northwind
      - type: bind
        source: C:/DockerVolumes/postgres/tls/key.pem
        target: /var/lib/postgresql/key.pem
        read_only: true
      - type: bind
        source: C:/DockerVolumes/postgres/tls/certificate.crt
        target: /var/lib/postgresql/certificate.crt
        read_only: true
      - type: bind
        source: C:/DockerVolumes/postgres/run
        target: /var/run/postgresql
      - type: bind
        source: C:/DockerVolumes/postgres/csv/northwind
        target: /csv
        read_only: true
      - type: bind
        source: C:/DockerVolumes/postgres/sql/northwind
        target: /sql
        read_only: true
    env_file: .env
    user: 'postgres:postgres'
    security_opt:
      - label:user:postgres
      - no-new-privileges:true
    hostname: postgres
    container_name: postgres
    cap_drop: [ALL]
    healthcheck:
      test: [CMD, pg_isready, --dbname=postgres, --username=postgres]
      interval: 5s
      timeout: 2s
      start_period: 5s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 512M

  # ------------------------------------------------------------------------------------
  # p g a d m i n
  # ------------------------------------------------------------------------------------
  pgadmin:
    image: dpage/pgadmin4:8.12.0
    ports:
      - published: 8888
        target: 80
    volumes:
      - type: bind
        source: C:/DockerVolumes/postgres/pgadmin
        target: /var/lib/pgadmin
      - type: bind
        source: C:/DockerVolumes/postgres/pgadmin4
        target: /var/lib/pgadmin4
    env_file: pgadmin.env
    user: 'pgadmin:5050'
    hostname: pgadmin
    container_name: pgadmin
    cap_drop: [ALL]
    cap_add: [CHOWN, SETGID, SETUID, DAC_OVERRIDE, NET_BIND_SERVICE]
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
